{"version":3,"file":"index.js","sources":["../src/persona.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport {\n  Avatar,\n  AvatarBadge,\n  AvatarProps,\n  AvatarBadgeProps,\n  Tooltip,\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  ThemingProps,\n  SystemStyleObject,\n  SystemProps,\n  useColorModeValue,\n  useTheme,\n  useMultiStyleConfig,\n  omitThemingProps,\n  createStylesContext,\n} from '@chakra-ui/react'\n\nimport { cx, __DEV__ } from '@chakra-ui/utils'\n\nconst [StylesProvider, useStyles] = createStylesContext('Persona')\n\nexport interface PresenceOptions {\n  [presence: string]: {\n    label: string\n    color: string\n  }\n}\n\n/**\n * Default presence values: online, offline, busy, dnd, away\n *\n * You can overwrite colors in the theme semantic tokens.\n * theme.semanticTokens.colors['presence.online'] = 'cyan.500'\n *\n * Or add a custom presence value\n * theme.semanticTokens.colors['presence.vacay'] = 'blue.500'\n */\nexport const Presence: PresenceOptions = {\n  online: {\n    label: 'Online',\n    color: 'presence.online',\n  },\n  offline: {\n    label: 'Offline',\n    color: 'presence.offline',\n  },\n  busy: {\n    label: 'Busy',\n    color: 'presence.busy',\n  },\n  dnd: {\n    label: 'Do-not-disturb',\n    color: 'presence.dnd',\n  },\n  away: {\n    label: 'Away',\n    color: 'presence.away',\n  },\n}\n\n/**\n * Fallback when theme tokens aren't configured\n */\nexport const defaultPresenceTokens = {\n  online: 'green.500',\n  offline: 'gray.400',\n  busy: 'orange.500',\n  dnd: 'red.500',\n  away: 'gray.400',\n}\n\ninterface PersonaOptions {\n  /**\n   * The name of the person in the avatar.\n   *\n   * - if `src` has loaded, the name will be used as the `alt` attribute of the `img`\n   * - If `src` is not loaded, the name will be used to create the initials\n   */\n  name?: string\n  /**\n   * The presence status of the person\n   *\n   * If set will add an AvatarBadge with color configured in `Presence`\n   * Default presence options:\n   * - online\n   * - offline\n   * - busy\n   * - dnd\n   * - away\n   */\n  presence?: string\n  /**\n   * The icon shown in the AvatarBadge\n   */\n  presenceIcon?: React.ReactNode\n  /**\n   * Indicates that a person is out of office. Changes the presence badge style.\n   */\n  isOutOfOffice?: boolean\n  /**\n   * Primary label of the persona, defaults to the name\n   */\n  label?: React.ReactNode\n  /**\n   * Secondary label, usually the role of the person\n   * Only visible from md size and up.\n   */\n  secondaryLabel?: React.ReactNode\n  /**\n   * Tertiary label, usually the status of the person.\n   * Only visible from lg size and up.\n   */\n  tertiaryLabel?: React.ReactNode\n  /**\n   * Hide the persona details next to the avatar.\n   */\n  hideDetails?: boolean\n  /**\n   * The size of the persona, from 2xs to 2xl.\n   */\n  size?: '2xs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl'\n}\n\nexport interface PersonaProps\n  extends PersonaOptions,\n    Omit<PresenceAvatarProps, 'size' | 'variant'> {}\n\nexport const Persona: React.FC<PersonaProps> = (props) => {\n  const {\n    name,\n    presence,\n    presenceIcon,\n    isOutOfOffice,\n    label,\n    secondaryLabel,\n    tertiaryLabel,\n    size,\n    hideDetails,\n    children,\n    /** Avatar props */\n    getInitials,\n    icon,\n    iconLabel,\n    ignoreFallback,\n    loading,\n    onError,\n    src,\n    srcSet,\n    ...rest\n  } = props\n\n  return (\n    <PersonaContainer size={size} {...rest}>\n      <PersonaAvatar\n        name={name}\n        presence={presence}\n        presenceIcon={presenceIcon}\n        isOutOfOffice={isOutOfOffice}\n        size={size}\n        getInitials={getInitials}\n        icon={icon}\n        iconLabel={iconLabel}\n        ignoreFallback={ignoreFallback}\n        loading={loading}\n        onError={onError}\n        src={src}\n        srcSet={srcSet}\n      />\n      {!hideDetails && (\n        <PersonaDetails>\n          <PersonaLabel>{label || name}</PersonaLabel>\n          {secondaryLabel && (\n            <PersonaSecondaryLabel>{secondaryLabel}</PersonaSecondaryLabel>\n          )}\n          {tertiaryLabel && (\n            <PersonaTertiaryLabel>{tertiaryLabel}</PersonaTertiaryLabel>\n          )}\n          {children}\n        </PersonaDetails>\n      )}\n    </PersonaContainer>\n  )\n}\n\nif (__DEV__) {\n  Persona.displayName = 'Persona'\n}\n\nexport interface PersonaContainerProps\n  extends HTMLChakraProps<'div'>,\n    Omit<ThemingProps<'Persona'>, 'size'>,\n    Pick<PersonaOptions, 'size'> {}\n\nexport const PersonaContainer = forwardRef<PersonaContainerProps, 'div'>(\n  (props, ref) => {\n    const { children, ...rest } = props\n    const styles = useMultiStyleConfig('Persona', props)\n\n    const containerProps = omitThemingProps(rest)\n\n    const baseStyle: SystemStyleObject = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n    }\n\n    const containerStyles: SystemStyleObject = {\n      ...baseStyle,\n      ...styles.container,\n    }\n\n    return (\n      <StylesProvider value={styles}>\n        <chakra.div\n          ref={ref}\n          __css={containerStyles}\n          {...containerProps}\n          className={cx('saas-persona', props.className)}\n        >\n          {children}\n        </chakra.div>\n      </StylesProvider>\n    )\n  }\n)\n\nif (__DEV__) {\n  PersonaContainer.displayName = 'PersonaContainer'\n}\n\ninterface PresenceAvatarOptions {\n  /**\n   * The name of the person in the avatar.\n   *\n   * - if `src` has loaded, the name will be used as the `alt` attribute of the `img`\n   * - If `src` is not loaded, the name will be used to create the initials\n   */\n  name?: string\n  /**\n   * The presence status of the person\n   *\n   * If set will add an AvatarBadge with color configured in `Presence`\n   * Default presence options:\n   * - online\n   * - offline\n   * - busy\n   * - dnd\n   * - away\n   */\n  presence?: string\n  /**\n   * The textual presence status of the person.\n   * Online, Offline, Busy, Do-not-disturb or Away\n   */\n  presenceLabel?: string\n  /**\n   * The icon shown in the AvatarBadge\n   */\n  presenceIcon?: React.ReactNode\n  /**\n   * The badge size. Defaults to 1em. Use em value to keep the size relative to the avatar.\n   */\n  badgeSize?: SystemProps['boxSize']\n  /**\n   * Indicates that a person is out of office. Changes the presence badge style.\n   */\n  isOutOfOffice?: boolean\n}\n\ninterface PresenceAvatarProps extends PresenceAvatarOptions, AvatarProps {}\n\nexport const PersonaAvatar = forwardRef<PresenceAvatarProps, 'span'>(\n  (props, ref) => {\n    const {\n      name,\n      presence,\n      presenceLabel,\n      presenceIcon,\n      isOutOfOffice,\n      badgeSize = '1em',\n      size,\n      getInitials,\n      icon,\n      iconLabel,\n      ignoreFallback,\n      loading,\n      onError,\n      src,\n      srcSet,\n      ...rest\n    } = props\n    const badgeProps: AvatarBadgeProps = {}\n    let badge\n\n    const theme = useTheme()\n\n    const colors = theme.colors?.presence || defaultPresenceTokens\n    const semantic = !!theme.semanticTokens?.colors?.['presence.online']\n\n    if (presence) {\n      const label = presenceLabel || Presence[presence]?.label\n      const color = semantic\n        ? Presence[presence].color || `presence.${presence}`\n        : colors[presence]\n      if (isOutOfOffice) {\n        badgeProps.sx = {\n          _before: {\n            content: '\"\"',\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            border: '0.2em solid',\n            borderColor: color,\n            borderRadius: '50%',\n          },\n        }\n        badgeProps.borderWidth = '0.15em'\n        badgeProps.bg = useColorModeValue('white', 'gray.800')\n      } else {\n        badgeProps.bg = color\n      }\n\n      badge = (\n        <AvatarBadge boxSize={badgeSize} {...badgeProps}>\n          {presenceIcon}\n        </AvatarBadge>\n      )\n\n      if (label) {\n        badge = <Tooltip label={label}>{badge}</Tooltip>\n      }\n    }\n\n    return (\n      <Avatar\n        ref={ref}\n        name={name}\n        size={size}\n        getInitials={getInitials}\n        icon={icon}\n        iconLabel={iconLabel}\n        ignoreFallback={ignoreFallback}\n        loading={loading}\n        onError={onError}\n        src={src}\n        srcSet={srcSet}\n        {...rest}\n      >\n        {badge}\n      </Avatar>\n    )\n  }\n)\n\nif (__DEV__) {\n  PersonaAvatar.displayName = 'PersonaAvatar'\n}\n\nexport const PersonaDetails = forwardRef<PersonaProps, 'div'>((props, ref) => {\n  const { children, className, ...rest } = props\n  const styles = useStyles()\n\n  const baseStyle: SystemStyleObject = {\n    display: 'flex',\n    flexDirection: 'column',\n  }\n\n  const detailsStyles = {\n    ...baseStyle,\n    ...styles.details,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      {...rest}\n      __css={detailsStyles}\n      className={cx('saas-persona__details', className)}\n    >\n      {children}\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  PersonaDetails.displayName = 'PersonaDetails'\n}\n\nexport const PersonaLabel = forwardRef<HTMLChakraProps<'span'>, 'span'>(\n  (props, ref) => {\n    const styles = useStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.label}\n        className={cx('saas-persona__label', props.className)}\n      />\n    )\n  }\n)\n\nif (__DEV__) {\n  PersonaLabel.displayName = 'PersonaLabel'\n}\n\nexport const PersonaSecondaryLabel = forwardRef<\n  HTMLChakraProps<'span'>,\n  'span'\n>((props, ref) => {\n  const styles = useStyles()\n  return (\n    <chakra.span\n      ref={ref}\n      {...props}\n      __css={styles.secondaryLabel}\n      className={cx('saas-persona__secondary-label', props.className)}\n    />\n  )\n})\n\nif (__DEV__) {\n  PersonaSecondaryLabel.displayName = 'PersonaSecondaryLabel'\n}\n\nexport const PersonaTertiaryLabel = forwardRef<HTMLChakraProps<'span'>, 'span'>(\n  (props, ref) => {\n    const styles = useStyles()\n\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.tertiaryLabel}\n        className={cx('saas-persona__tertiary-label', props.className)}\n      />\n    )\n  }\n)\n\nif (__DEV__) {\n  PersonaTertiaryLabel.displayName = 'PersonaTertiaryLabel'\n}\n"],"names":["_excluded","_excluded2","_excluded3","_excluded4","createStylesContext","StylesProvider","_createStylesContext","useStyles","online","label","color","offline","busy","dnd","away","defaultPresenceTokens","Persona","props","name","presence","presenceIcon","isOutOfOffice","secondaryLabel","tertiaryLabel","size","hideDetails","children","getInitials","icon","iconLabel","ignoreFallback","loading","onError","src","srcSet","rest","React","createElement","PersonaContainer","_extends","PersonaAvatar","PersonaDetails","PersonaLabel","PersonaSecondaryLabel","PersonaTertiaryLabel","__DEV__","displayName","forwardRef","ref","styles","useMultiStyleConfig","containerProps","omitThemingProps","containerStyles","baseStyle","display","flexDirection","alignItems","container","value","chakra","div","__css","className","cx","_theme$colors","_theme$semanticTokens","_theme$semanticTokens2","badge","presenceLabel","_props$badgeSize","badgeSize","badgeProps","theme","useTheme","colors","semantic","semanticTokens","_Presence$presence","Presence","sx","_before","content","width","height","position","top","left","border","borderColor","borderRadius","borderWidth","bg","useColorModeValue","AvatarBadge","boxSize","Tooltip","Avatar","_objectWithoutPropertiesLoose","detailsStyles","details","span"],"mappings":"iuBAAA,IAAAA,EAAA,CAAA,OAAA,WAAA,eAAA,gBAAA,QAAA,iBAAA,gBAAA,OAAA,cAAA,WAAA,cAAA,OAAA,YAAA,iBAAA,UAAA,UAAA,MAAA,UAAAC,EAAA,CAAA,YAAAC,EAAA,CAAA,OAAA,WAAA,gBAAA,eAAA,gBAAA,YAAA,OAAA,cAAA,OAAA,YAAA,iBAAA,UAAA,UAAA,MAAA,UAAAC,EAAA,CAAA,WAAA,aAuBoCC,EAAAA,EAAmBA,oBAAC,WAAjDC,EAAcC,EAAA,GAAEC,EAASD,EAAA,KAkBS,CACvCE,OAAQ,CACNC,MAAO,SACPC,MAAO,mBAETC,QAAS,CACPF,MAAO,UACPC,MAAO,oBAETE,KAAM,CACJH,MAAO,OACPC,MAAO,iBAETG,IAAK,CACHJ,MAAO,iBACPC,MAAO,gBAETI,KAAM,CACJL,MAAO,OACPC,MAAO,kBAOEK,EAAwB,CACnCP,OAAQ,YACRG,QAAS,WACTC,KAAM,aACNC,IAAK,UACLC,KAAM,YA2DYE,EAA2B,SAACC,GAC9C,IACEC,EAoBED,EApBFC,KACAC,EAmBEF,EAnBFE,SACAC,EAkBEH,EAlBFG,aACAC,EAiBEJ,EAjBFI,cACAZ,EAgBEQ,EAhBFR,MACAa,EAeEL,EAfFK,eACAC,EAcEN,EAdFM,cACAC,EAaEP,EAbFO,KACAC,EAYER,EAZFQ,YACAC,EAWET,EAXFS,SAEAC,EASEV,EATFU,YACAC,EAQEX,EARFW,KACAC,EAOEZ,EAPFY,UACAC,EAMEb,EANFa,eACAC,EAKEd,EALFc,QACAC,EAIEf,EAJFe,QACAC,EAGEhB,EAHFgB,IACAC,EAEEjB,EAFFiB,OACGC,EACDlB,EAAAA,kBAEJ,OACEmB,EAAAC,cAACC,EAAgBC,EAAA,CAACf,KAAMA,GAAUW,gBAChCC,EAAAC,cAACG,EAAa,CACZtB,KAAMA,EACNC,SAAUA,EACVC,aAAcA,EACdC,cAAeA,EACfG,KAAMA,EACNG,YAAaA,EACbC,KAAMA,EACNC,UAAWA,EACXC,eAAgBA,EAChBC,QAASA,EACTC,QAASA,EACTC,IAAKA,EACLC,OAAQA,KAERT,gBACAW,gBAACK,EAAc,kBACbL,EAACC,cAAAK,EAAcjC,KAAAA,GAASS,GACvBI,gBACCc,EAAAC,cAACM,EAAqB,KAAErB,GAEzBC,gBACCa,EAACC,cAAAO,EAAsBrB,KAAAA,GAExBG,GAKX,EAEImB,EAAAA,UACF7B,EAAQ8B,YAAc,WAQXR,MAAmBS,EAAUA,WACxC,SAAC9B,EAAO+B,GACN,IAAQtB,EAAsBT,EAAtBS,SAAaS,IAASlB,EAAKhB,GAC7BgD,EAASC,EAAmBA,oBAAC,UAAWjC,GAE1BkC,EAAGC,EAAAA,iBAAiBjB,GAQlCkB,EACDC,EAAAA,CAAAA,EAPgC,CACnCC,QAAS,OACTC,cAAe,MACfC,WAAY,UAKTR,EAAOS,wBAGZ,OACEtB,EAACC,cAAAhC,EAAe,CAAAsD,MAAOV,gBACrBb,EAACC,cAAAuB,EAAMA,OAACC,IACNtB,EAAA,CAAAS,IAAKA,EACLc,MAAOT,GACHF,EAAc,CAClBY,UAAWC,EAAAA,GAAG,eAAgB/C,EAAM8C,aAEnCrC,GAIT,GAGEmB,EAAOA,UACTP,EAAiBQ,YAAc,oBA4CpBN,IAAaA,EAAGO,EAAAA,WAC3B,SAAC9B,EAAO+B,GAAO,IAAAiB,EAAAC,EAAAC,EAoBJC,EAlBPlD,EAgBED,EAhBFC,KACAC,EAeEF,EAfFE,SACAkD,EAcEpD,EAdFoD,cACAjD,EAaEH,EAbFG,aACAC,EAYEJ,EAZFI,cAAaiD,EAYXrD,EAXFsD,UAAAA,OAAY,IAAAD,EAAA,MACZ9C,EAAAA,EAUEP,EAVFO,KACAG,EASEV,EATFU,YACAC,EAQEX,EARFW,KACAC,EAOEZ,EAPFY,UACAC,EAMEb,EANFa,eACAC,EAKEd,EALFc,QACAC,EAIEf,EAJFe,QACAC,EAGEhB,EAHFgB,IACAC,EAEEjB,EAFFiB,OACGC,EACDlB,EAAAA,EACJf,GAAgBsE,EAAqB,GAG/BC,EAAQC,aAEFC,UAAGF,EAAAA,EAAME,eAANV,EAAc9C,WAAYJ,EAC3B6D,IAAK,OAAAH,EAAAA,EAAMI,iBAAsB,OAA5BV,EAAAD,EAAsBS,UAAtBR,EAA+B,oBAElD,GAAIhD,EAAU,CAAA,IAAA2D,EACDrE,EAAG4D,WAAaS,EAAIC,EAAS5D,WAAT2D,EAAoBrE,OACxCC,EAAGkE,EACVG,EAAS5D,GAAUT,OAAK,YAAgBS,EACxCwD,EAAOxD,GACPE,GACFmD,EAAWQ,GAAK,CACdC,QAAS,CACPC,QAAS,KACTC,MAAO,OACPC,OAAQ,OACRC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,OAAQ,cACRC,YAAa/E,EACbgF,aAAc,QAGlBlB,EAAWmB,YAAc,SACzBnB,EAAWoB,GAAKC,EAAiBA,kBAAC,QAAS,aAE3CrB,EAAWoB,GAAKlF,EAGlB0D,eACEhC,EAACC,cAAAyD,EAAAA,YAAYvD,EAAA,CAAAwD,QAASxB,GAAeC,GAClCpD,GAIDX,IACF2D,eAAQhC,EAACC,cAAA2D,EAAAA,QAAQ,CAAAvF,MAAOA,GAAQ2D,GAEnC,cAED,OACEhC,EAACC,cAAA4D,EAAAA,UACCjD,IAAKA,EACL9B,KAAMA,EACNM,KAAMA,EACNG,YAAaA,EACbC,KAAMA,EACNC,UAAWA,EACXC,eAAgBA,EAChBC,QAASA,EACTC,QAASA,EACTC,IAAKA,EACLC,OAAQA,GACJC,GAEHiC,EAGP,GAGEvB,EAAAA,UACFL,EAAcM,YAAc,iBAGjBL,IAAAA,EAAiBM,EAAUA,WAAsB,SAAC9B,EAAO+B,GACpE,IAAQtB,EAAiCT,EAAjCS,SAAUqC,EAAuB9C,EAAvB8C,UAAc5B,EAAI+D,EAAKjF,EACzCd,GAOmBgG,EAAA5D,EAAA,CAAA,EALkB,CACnCgB,QAAS,OACTC,cAAe,UAJFjD,IASH6F,sBAGZ,OACEhE,EAAAC,cAACuB,EAAAA,OAAOC,IACNtB,EAAA,CAAAS,IAAKA,GACDb,EACJ,CAAA2B,MAAOqC,EACPpC,UAAWC,EAAEA,GAAC,wBAAyBD,KAEtCrC,EAGP,GAEImB,EAAAA,UACFJ,EAAeK,YAAc,kBAGlBJ,IAAYA,EAAGK,EAAUA,WACpC,SAAC9B,EAAO+B,GACN,IAAYC,EAAG1C,iBACf,OACE6B,EAAAC,cAACuB,EAAMA,OAACyC,KAAI9D,EAAA,CACVS,IAAKA,GACD/B,EACJ,CAAA6C,MAAOb,EAAOxC,MACdsD,UAAWC,KAAG,sBAAuB/C,EAAM8C,aAGjD,GAGElB,EAAOA,UACTH,EAAaI,YAAc,gBAGhBH,IAAqBA,EAAGI,EAAAA,WAGnC,SAAC9B,EAAO+B,GACR,IAAYC,EAAG1C,iBACf,OACE6B,gBAACwB,SAAOyC,KAAI9D,EAAA,CACVS,IAAKA,GACD/B,EACJ,CAAA6C,MAAOb,EAAO3B,eACdyC,UAAWC,EAAEA,GAAC,gCAAiC/C,EAAM8C,aAG3D,GAEIlB,EAAAA,UACFF,EAAsBG,YAAc,yBAGzBF,IAAAA,EAAuBG,EAAUA,WAC5C,SAAC9B,EAAO+B,GACN,IAAYC,EAAG1C,iBAEf,OACE6B,EAACC,cAAAuB,SAAOyC,KAAI9D,EAAA,CACVS,IAAKA,GACD/B,EAAK,CACT6C,MAAOb,EAAO1B,cACdwC,UAAWC,EAAAA,GAAG,+BAAgC/C,EAAM8C,aAG1D,GAGElB,YACFD,EAAqBE,YAAc"}