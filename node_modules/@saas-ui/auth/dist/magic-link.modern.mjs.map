{"version":3,"file":"magic-link.modern.mjs","sources":["../src/services/magic-link.ts"],"sourcesContent":["import { AuthParams, User, AuthProviderProps, AuthToken } from '../'\n\n/**\n * MagicLink auth service\n *\n * Only supports magic link at the moment.\n * `checkAuth` will refresh the id token after 10 minute.\n *\n * @param client MagicLink\n * @returns {AuthProviderProps}\n */\nexport const createAuthService = (client: any): AuthProviderProps => {\n  let token: AuthToken\n  let expireTime = 0\n\n  const onLogin = async (params: AuthParams): Promise<User | undefined> => {\n    return await client.auth.loginWithMagicLink(params)\n  }\n\n  const onLogout = async () => {\n    token = null\n    expireTime = 0\n    return await client.auth.signOut()\n  }\n\n  const onLoadUser = async () => {\n    if (await client.user.isLoggedIn()) {\n      return await client.user.getMetadata()\n    }\n  }\n\n  const onGetToken = async () => {\n    if (!token || Date.now() <= expireTime) {\n      expireTime = Date.now() + 600 // now + 10 min\n      token = await client.user.getIdToken()\n    }\n\n    return token\n  }\n\n  return {\n    onLogin,\n    onLogout,\n    onLoadUser,\n    onGetToken,\n  }\n}\n"],"names":["createAuthService","client","token","expireTime","onLogin","async","auth","loginWithMagicLink","params","onLogout","signOut","onLoadUser","user","isLoggedIn","getMetadata","onGetToken","Date","now","getIdToken"],"mappings":"AAWaA,MAAAA,EAAqBC,IAChC,IAAIC,EACUC,EAAG,EA2BjB,MAAO,CACLC,QA1BcC,eACKJ,EAACK,KAAKC,mBAAmBC,GA0B5CC,SAvBeJ,UACfH,EAAQ,KACRC,EAAa,QACAF,EAAOK,KAAKI,WAqBzBC,WAlBiBN,UACjB,WAAiBO,KAAKC,aACpB,aAAaZ,EAAOW,KAAKE,aAC1B,EAgBDC,WAbiBV,YACZH,GAASc,KAAKC,OAASd,KAC1BA,EAAaa,KAAKC,MAAQ,IAC1Bf,QAAcD,EAAOW,KAAKM,cAI9BhB"}